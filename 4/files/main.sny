# This is a comment
'hello world'
123 # a number
''
12# 'a'

fun main(args: str[*]) {
	println('Hello world')
}


@require({ 'random' })
fun pick(items: list) {
	return items.at(random::new(0 to items.len()))
}

class range {
	static class CharRange {
		private typedef T = str::char
		static fun new(self: Self, x: T, y: T);
	}
	private typedef T = Not<(-infinity), infinity> + num
	private {
		const x: T;
		const y: T;
	}
	static fun new(self: Self, x: T, y: T) {
		self += { x, y }
	};
	fun set_inclusive(inclusive: bool);
}

const int: range = range<str::char>::new()

fun main(args: str[*]) -> none {
	return 0
}